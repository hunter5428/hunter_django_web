# str_dashboard/utils/queries/stage_1/sql_templates.py
"""
Stage 1 SQL 쿼리 템플릿
"""

# ALERT ID로 초기 정보 조회
INITIAL_ALERT_QUERY = """
SELECT 
    STDS_DTM,
    CUST_ID,
    STR_RULE_ID,
    STR_ALERT_ID,
    STR_RPT_MNGT_NO
FROM STR_ALERT_INFO_BASE
WHERE STR_ALERT_ID = ?
AND ROWNUM = 1
"""

# 같은 년월 + 같은 고객의 모든 ALERT 정보 조회
MONTHLY_ALERT_QUERY = """
WITH MAX_RULE_LOG AS (
    SELECT 
        STR_RULE_ID, 
        MAX(STR_RULE_SEQ) AS MAX_SEQ
    FROM STR_RULE_MNGT_LOG
    GROUP BY STR_RULE_ID
)
SELECT
    TO_CHAR(A.STDS_DTM, 'YYYY-MM-DD HH24:MI:SS') AS STDS_DTM,
    A.CUST_ID,
    A.STR_RULE_ID,
    A.STR_ALERT_ID,
    A.STR_RPT_MNGT_NO,
    B.STR_RULE_NM,
    B.STR_RULE_DTL_EXP,
    B.STR_RULE_EXTR_COND_CTNT,
    B.AML_BSS_CTNT,
    TO_CHAR(C.TRAN_STRT_DTM, 'YYYY-MM-DD HH24:MI:SS') AS TRAN_STRT,
    TO_CHAR(C.TRAN_END_DTM, 'YYYY-MM-DD HH24:MI:SS') AS TRAN_END,
    -- 추가 메타데이터
    TO_CHAR(A.STDS_DTM, 'YYYY-MM') AS YEAR_MONTH,
    CASE 
        WHEN A.STR_ALERT_ID = ? THEN 'Y' 
        ELSE 'N' 
    END AS IS_TARGET_ALERT
FROM STR_ALERT_INFO_BASE A
LEFT JOIN MAX_RULE_LOG M 
    ON M.STR_RULE_ID = A.STR_RULE_ID
LEFT JOIN STR_RULE_MNGT_LOG B 
    ON B.STR_RULE_ID = M.STR_RULE_ID 
    AND B.STR_RULE_SEQ = M.MAX_SEQ
LEFT JOIN STR_ALERT_LIST C 
    ON C.STR_ALERT_ID = A.STR_ALERT_ID
WHERE A.STDS_DTM >= TO_DATE(?, 'YYYY-MM-DD')  -- 월 시작일
  AND A.STDS_DTM < TO_DATE(?, 'YYYY-MM-DD')    -- 월 종료일 + 1
  AND A.CUST_ID = ?                              -- 고객 ID
ORDER BY A.STDS_DTM ASC, A.STR_ALERT_ID ASC
"""

# ==================== Rule 히스토리 조회 추가 ====================
RULE_HISTORY_QUERY = """
WITH RULE_COMBINATIONS AS (
    -- 모든 STR 보고서의 Rule 조합 생성
    SELECT 
        A.STR_RPT_MNGT_NO,
        B.STR_RPT_DTM,
        B.STR_EXAM_RSLT_CD,
        B.CUST_ID,
        LISTAGG(A.STR_RULE_ID, ',') WITHIN GROUP (ORDER BY A.STR_RULE_ID) AS RULE_COMBO
    FROM STR_ALERT_INFO_BASE A
    INNER JOIN STR_RPT_BASE B ON A.STR_RPT_MNGT_NO = B.STR_RPT_MNGT_NO
    WHERE A.STR_RULE_ID IS NOT NULL
    GROUP BY A.STR_RPT_MNGT_NO, B.STR_RPT_DTM, B.STR_EXAM_RSLT_CD, B.CUST_ID
),
SSPC_PATTERNS AS (
    -- 의심거래 패턴 정보 추가
    SELECT DISTINCT
        L.STR_RPT_MNGT_NO,
        LISTAGG(DISTINCT B.UPER_STR_SSPC_PTTN_CTNT, ', ') 
            WITHIN GROUP (ORDER BY B.UPER_STR_SSPC_PTTN_CTNT) AS UPER_PATTERNS,
        LISTAGG(DISTINCT D.STR_SSPC_PTTN_CTNT, ', ') 
            WITHIN GROUP (ORDER BY D.STR_SSPC_PTTN_CTNT) AS LWER_PATTERNS
    FROM STR_RPT_SSPC_LIST L
    LEFT JOIN STR_SSPC_PTTN_BASE B ON B.UPER_STR_SSPC_PTTN_CD = L.UPER_STR_SSPC_PTTN_CD
    LEFT JOIN STR_SSPC_PTTN_BASE D ON D.STR_SSPC_PTTN_CD = L.LWER_STR_SSPC_PTTN_CD
    GROUP BY L.STR_RPT_MNGT_NO
)
SELECT 
    RC.RULE_COMBO,
    COUNT(DISTINCT RC.STR_RPT_MNGT_NO) AS OCCURRENCE_COUNT,
    COUNT(DISTINCT RC.CUST_ID) AS UNIQUE_CUSTOMERS,
    TO_CHAR(MIN(RC.STR_RPT_DTM), 'YYYY-MM-DD') AS FIRST_OCCURRENCE,
    TO_CHAR(MAX(RC.STR_RPT_DTM), 'YYYY-MM-DD') AS LAST_OCCURRENCE,
    -- 심사 결과 분포
    SUM(CASE WHEN RC.STR_EXAM_RSLT_CD = 'Y' THEN 1 ELSE 0 END) AS STR_REPORTED_COUNT,
    SUM(CASE WHEN RC.STR_EXAM_RSLT_CD = 'N' THEN 1 ELSE 0 END) AS NOT_REPORTED_COUNT,
    -- 의심거래 패턴 집계
    LISTAGG(DISTINCT SP.UPER_PATTERNS, '; ') 
        WITHIN GROUP (ORDER BY SP.UPER_PATTERNS) AS UPER_PATTERNS,
    LISTAGG(DISTINCT SP.LWER_PATTERNS, '; ') 
        WITHIN GROUP (ORDER BY SP.LWER_PATTERNS) AS LWER_PATTERNS
FROM RULE_COMBINATIONS RC
LEFT JOIN SSPC_PATTERNS SP ON RC.STR_RPT_MNGT_NO = SP.STR_RPT_MNGT_NO
WHERE RC.RULE_COMBO = ?  -- 현재 Alert의 Rule 조합
GROUP BY RC.RULE_COMBO
"""

# 유사 Rule 조합 검색
SIMILAR_RULE_COMBINATIONS_QUERY = """
WITH TARGET_RULES AS (
    -- 입력된 Rule ID 리스트
    SELECT COLUMN_VALUE AS RULE_ID 
    FROM TABLE(sys.ODCIVARCHAR2LIST(?))  -- 콤마 구분 문자열을 테이블로 변환
),
RULE_COMBINATIONS AS (
    SELECT 
        LISTAGG(STR_RULE_ID, ',') WITHIN GROUP (ORDER BY STR_RULE_ID) AS RULE_COMBO,
        COUNT(DISTINCT STR_RULE_ID) AS RULE_COUNT
    FROM STR_ALERT_INFO_BASE
    WHERE STR_RPT_MNGT_NO IN (
        SELECT DISTINCT STR_RPT_MNGT_NO
        FROM STR_ALERT_INFO_BASE
        WHERE STR_RULE_ID IN (SELECT RULE_ID FROM TARGET_RULES)
    )
    GROUP BY STR_RPT_MNGT_NO
),
SIMILARITY_CALC AS (
    SELECT 
        RC.RULE_COMBO,
        RC.RULE_COUNT,
        -- 교집합 계산 (공통 Rule 개수)
        (
            SELECT COUNT(*)
            FROM TARGET_RULES T
            WHERE INSTR(RC.RULE_COMBO, T.RULE_ID) > 0
        ) AS COMMON_RULES,
        -- Jaccard 유사도 계산
        ROUND(
            (SELECT COUNT(*) FROM TARGET_RULES T WHERE INSTR(RC.RULE_COMBO, T.RULE_ID) > 0) / 
            (RC.RULE_COUNT + (SELECT COUNT(*) FROM TARGET_RULES) - 
             (SELECT COUNT(*) FROM TARGET_RULES T WHERE INSTR(RC.RULE_COMBO, T.RULE_ID) > 0))
        , 3) AS SIMILARITY
    FROM RULE_COMBINATIONS RC
)
SELECT 
    SC.RULE_COMBO,
    SC.SIMILARITY,
    SC.COMMON_RULES,
    SC.RULE_COUNT AS TOTAL_RULES,
    COUNT(*) AS OCCURRENCE_COUNT
FROM SIMILARITY_CALC SC
JOIN STR_ALERT_INFO_BASE A ON INSTR(SC.RULE_COMBO, A.STR_RULE_ID) > 0
WHERE SC.SIMILARITY >= 0.5  -- 50% 이상 유사도만
  AND SC.RULE_COMBO != ?    -- 현재 조합 제외
GROUP BY SC.RULE_COMBO, SC.SIMILARITY, SC.COMMON_RULES, SC.RULE_COUNT
ORDER BY SC.SIMILARITY DESC, OCCURRENCE_COUNT DESC
FETCH FIRST 10 ROWS ONLY
"""