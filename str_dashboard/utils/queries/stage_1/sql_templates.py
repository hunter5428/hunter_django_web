# str_dashboard/utils/queries/stage_1/sql_templates.py
"""
Stage 1 SQL 쿼리 템플릿
"""

# ALERT ID로 초기 정보 조회
MONTHLY_ALERT_QUERY = """
WITH TARGET_INFO AS (
    SELECT
        TRUNC(STDS_DTM, 'MM') AS TARGET_MONTH_START,
        CUST_ID               AS TARGET_CUST
    FROM STR_ALERT_INFO_BASE
    WHERE STR_ALERT_ID = :alert_id
      AND ROWNUM = 1
),
MAX_RULE_LOG AS (
    SELECT STR_RULE_ID, MAX(STR_RULE_SEQ) AS MAX_SEQ
    FROM STR_RULE_MNGT_LOG
    GROUP BY STR_RULE_ID
)
SELECT
    TO_CHAR(A.STDS_DTM, 'YYYY-MM-DD') AS STDS_DTM,  
    A.CUST_ID,
    A.STR_RULE_ID,
    A.STR_ALERT_ID,
    A.STR_RPT_MNGT_NO,
    B.STR_RULE_NM,
    B.STR_RULE_DTL_EXP,
    B.STR_RULE_EXTR_COND_CTNT,
    B.AML_BSS_CTNT,
    TO_CHAR(C.TRAN_STRT_DTM, 'YYYY-MM-DD') AS TRAN_STRT,
    TO_CHAR(C.TRAN_END_DTM, 'YYYY-MM-DD') AS TRAN_END
FROM STR_ALERT_INFO_BASE A
CROSS JOIN TARGET_INFO T
LEFT JOIN MAX_RULE_LOG M
       ON M.STR_RULE_ID = A.STR_RULE_ID
LEFT JOIN STR_RULE_MNGT_LOG B
       ON B.STR_RULE_ID = M.STR_RULE_ID
      AND B.STR_RULE_SEQ = M.MAX_SEQ
LEFT JOIN STR_ALERT_LIST C
       ON C.STR_ALERT_ID = A.STR_ALERT_ID
WHERE A.STDS_DTM >= T.TARGET_MONTH_START
  AND A.STDS_DTM <  ADD_MONTHS(T.TARGET_MONTH_START, 1)
  AND A.CUST_ID = T.TARGET_CUST
ORDER BY A.STDS_DTM ASC
"""


# ==================== Rule 히스토리 조회 (기존 로직 참고하여 수정) ====================
RULE_HISTORY_QUERY = """
WITH R_SRC AS (
    -- 모든 STR 보고의 Rule ID 조합
    SELECT DISTINCT 
        STR_RPT_MNGT_NO, 
        STR_RULE_ID
    FROM STR_ALERT_INFO_BASE
    WHERE STR_RULE_ID IS NOT NULL
),
R AS (
    -- 보고서별 Rule ID 조합 생성
    SELECT
        STR_RPT_MNGT_NO,
        LISTAGG(STR_RULE_ID, ',') WITHIN GROUP (ORDER BY STR_RULE_ID) AS STR_RULE_ID_LIST
    FROM R_SRC
    GROUP BY STR_RPT_MNGT_NO
),
UPER_SRC AS (
    -- 상위 의심거래 패턴
    SELECT DISTINCT
        L.STR_RPT_MNGT_NO,
        L.UPER_STR_SSPC_PTTN_CD AS CODE,
        B.UPER_STR_SSPC_PTTN_CTNT AS TEXT
    FROM STR_RPT_SSPC_LIST L
    JOIN STR_SSPC_PTTN_BASE B
        ON B.UPER_STR_SSPC_PTTN_CD = L.UPER_STR_SSPC_PTTN_CD
    WHERE L.UPER_STR_SSPC_PTTN_CD IS NOT NULL
),
UPER AS (
    -- 상위 패턴 집계
    SELECT
        STR_RPT_MNGT_NO,
        LISTAGG('(' || TO_CHAR(CODE) || ', ' || TEXT || ')', ', ')
            WITHIN GROUP (ORDER BY CODE) AS STR_SSPC_UPER
    FROM UPER_SRC
    GROUP BY STR_RPT_MNGT_NO
),
LWER_SRC AS (
    -- 하위 의심거래 패턴
    SELECT DISTINCT
        L.STR_RPT_MNGT_NO,
        L.LWER_STR_SSPC_PTTN_CD AS CODE,
        B.STR_SSPC_PTTN_CTNT AS TEXT
    FROM STR_RPT_SSPC_LIST L
    JOIN STR_SSPC_PTTN_BASE B
        ON B.STR_SSPC_PTTN_CD = L.LWER_STR_SSPC_PTTN_CD
    WHERE L.LWER_STR_SSPC_PTTN_CD IS NOT NULL
),
LWER AS (
    -- 하위 패턴 집계
    SELECT
        STR_RPT_MNGT_NO,
        LISTAGG('(' || TO_CHAR(CODE) || ', ' || TEXT || ')', ', ')
            WITHIN GROUP (ORDER BY CODE) AS STR_SSPC_LWER
    FROM LWER_SRC
    GROUP BY STR_RPT_MNGT_NO
),
RPT_INFO AS (
    -- 보고서별 정보 집계 (STR 보고 여부 등)
    SELECT 
        R.STR_RPT_MNGT_NO,
        R.STR_RULE_ID_LIST,
        RB.CUST_ID,
        TO_CHAR(RB.STR_RPT_DTM, 'YYYY-MM-DD') AS STR_RPT_DTM,
        -- XML_CRET_FILE_NM이 있으면 STR 보고된 것으로 간주
        CASE 
            WHEN RB.XML_CRET_FILE_NM IS NOT NULL THEN 'Y'
            ELSE 'N'
        END AS IS_STR_REPORTED
    FROM R
    LEFT JOIN STR_RPT_BASE RB 
        ON RB.STR_RPT_MNGT_NO = R.STR_RPT_MNGT_NO
)
SELECT 
    RI.STR_RULE_ID_LIST AS RULE_COMBO,
    COUNT(DISTINCT RI.STR_RPT_MNGT_NO) AS OCCURRENCE_COUNT,
    COUNT(DISTINCT RI.CUST_ID) AS UNIQUE_CUSTOMERS,
    MIN(RI.STR_RPT_DTM) AS FIRST_OCCURRENCE,
    MAX(RI.STR_RPT_DTM) AS LAST_OCCURRENCE,
    -- STR 보고/미보고 건수
    SUM(CASE WHEN RI.IS_STR_REPORTED = 'Y' THEN 1 ELSE 0 END) AS STR_REPORTED_COUNT,
    SUM(CASE WHEN RI.IS_STR_REPORTED = 'N' THEN 1 ELSE 0 END) AS NOT_REPORTED_COUNT,
    -- 의심거래 패턴 집계 (최대 4000자 제한)
    SUBSTR(
        LISTAGG(DISTINCT U.STR_SSPC_UPER, '; ') 
            WITHIN GROUP (ORDER BY U.STR_SSPC_UPER),
        1, 4000
    ) AS UPER_PATTERNS,
    SUBSTR(
        LISTAGG(DISTINCT L.STR_SSPC_LWER, '; ') 
            WITHIN GROUP (ORDER BY L.STR_SSPC_LWER),
        1, 4000
    ) AS LWER_PATTERNS
FROM RPT_INFO RI
LEFT JOIN UPER U ON U.STR_RPT_MNGT_NO = RI.STR_RPT_MNGT_NO
LEFT JOIN LWER L ON L.STR_RPT_MNGT_NO = RI.STR_RPT_MNGT_NO
WHERE RI.STR_RULE_ID_LIST = ?  -- 현재 Alert의 Rule 조합
GROUP BY RI.STR_RULE_ID_LIST
"""

# INITIAL_ALERT_QUERY 추가 필요
INITIAL_ALERT_QUERY = """
SELECT 
    A.STR_ALERT_ID,
    A.CUST_ID,
    A.STR_RPT_MNGT_NO,
    A.STDS_DTM,
    A.STR_RULE_ID
FROM STR_ALERT_INFO_BASE A
WHERE A.STR_ALERT_ID = :1
AND ROWNUM = 1
"""